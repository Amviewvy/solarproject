import React from "react";
import styles from "../../styles/SwitchToggle.module.css";

interface SwitchToggleProps {
  label?: string;
  checked: boolean;
  onChange: (checked: boolean) => void;
  delay?: number; // เพิ่ม prop delay (หน่วย milliseconds)
}

const SwitchToggle: React.FC<SwitchToggleProps> = ({ 
  label, 
  checked, 
  onChange,
  delay = 3000 // ค่า default 3 วินาที
}) => {
  
  const handleToggle = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newChecked = e.target.checked;
    
    // ถ้ามี delay
    if (delay > 0) {
      // ปิด input ชั่วคราวเพื่อป้องกันการคลิกซ้ำ
      e.target.disabled = true;
      
      // แสดง loading state (optional)
      // คุณสามารถเพิ่ม state loading ได้ที่นี่
      
      // ดีเลย์ก่อนเรียก onChange
      setTimeout(() => {
        onChange(newChecked);
        // เปิด input ใหม่หลังจาก delay
        e.target.disabled = false;
      }, delay);
    } else {
      // ไม่มี delay เรียก onChange ทันที
      onChange(newChecked);
    }
  };

  return (
    <div style={{ display: "inline-flex", flexDirection: "column", alignItems: "center", gap: "6px" }}>
      {label && <span style={{ fontSize: "14px", color: "#333" }}>{label}</span>}
      <label className={styles.switch}>
        <input
          type="checkbox"
          className={styles.cb}
          checked={checked}
          onChange={handleToggle}
        />
        <span className={styles.toggle}>
          <span className={styles.left}>off</span>
          <span className={styles.right}>on</span>
        </span>
      </label>
      {delay > 0 && (
        <div style={{ 
          fontSize: "10px", 
          color: "#666",
          marginTop: "2px"
        }}>
          delay: {delay/1000}s
        </div>
      )}
    </div>
  );
};

export default SwitchToggle;